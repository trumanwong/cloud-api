syntax = "proto3";

package api.instance.v1;

option go_package = "tencent/api/instance/v1;v1";
option java_multiple_files = true;
option java_package = "api.instance.v1";

service Instance {
  // 可使用的地域
  rpc ListRegion (ListRegionRequest) returns (ListRegionResponse);
  // 选择镜像
  rpc ListImage (ListImageRequest) returns (ListImageResponse);
  // 选择实例规格
  rpc ListInstanceType(ListInstanceTypeRequest) returns (ListInstanceTypeResponse);
  // 创建实例
  rpc CreateInstances (CreateInstancesRequest) returns (CreateInstancesResponse);
  // 实例列表
  rpc ListInstances (ListInstancesRequest) returns (ListInstancesResponse);
  // 开机
  rpc StartInstances(StartInstancesRequest) returns (StartInstancesResponse);
  // 关机
  rpc StopInstances(StopInstancesRequest) returns (StopInstancesResponse);
  // 重启
  rpc RebootInstances(RebootInstancesRequest) returns (RebootInstancesResponse);
  // 删除实例
  rpc DeleteInstances(DeleteInstancesRequest) returns (DeleteInstancesResponse);
}

message CreateInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  // 镜像id
  string image_id = 5;
  // 实例名称, 不指定实例显示名称则默认显示‘未命名’。
  // 购买多台实例，如果指定模式串{R:x}，表示生成数字[x, x+n-1]，其中n表示购买实例的数量，例如server_{R:3}，购买1台时，实例显示名称为server_3；购买2台时，实例显示名称分别为server_3，server_4。支持指定多个模式串{R:x}。
  // 购买多台实例，如果不指定模式串，则在实例显示名称添加后缀1、2...n，其中n表示购买实例的数量，例如server_，购买2台时，实例显示名称分别为server_1，server_2。
  // 最多支持60个字符（包含模式串）。
  string name = 6;
  // 实例规格
  string instance_type = 7;
  // 系统盘大小，单位GB
  int64 system_disk_size = 8;
  // 创建数量(1-100，默认1)
  int64 amount = 9;
  // 实例密码, Linux实例密码必须8到30位，至少包括两项[a-z]，[A-Z]、[0-9] 和 [( ) ` ~ ! @ # $ % ^ & * - + = | { } [ ] : ; ' , . ? / ]中的特殊符号。
  //Windows实例密码必须12到30位，至少包括三项[a-z]，[A-Z]，[0-9] 和 [( ) ` ~ ! @ # $ % ^ & * - + = | { } [ ] : ; ' , . ? /]中的特殊符号。
  //
  //若不指定该参数，则由系统随机生成密码，并通过站内信方式通知到用户。
  string password = 10;
  // 是否只预检此次请求。
  // true：发送检查请求，不会创建实例。检查项包括是否填写了必需参数，请求格式，业务限制和云服务器库存。
  // 如果检查不通过，则返回对应错误码；
  // 如果检查通过，则返回RequestId.
  // false（默认）：发送正常请求，通过检查后直接创建实例
  bool dry_run = 11;
}

message CreateInstancesResponse {
  // 请求id
  string request_id = 1;
  // 实例id列表
  repeated string instance_id_sets = 2;
}

message ListInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  // 实例状态列表的页码，起始值1，默认值1
  int64 page_number = 5;
  // 分页查询时设置的每页行数
  int64 page_size = 6;
}

message ListInstancesResponse {
  string request_id = 1;
  // 查询到的实例总数
  int64 total_count = 2;
  message Instance {
    // 实例ID
    string instance_id = 1;
    // 实例名称
    string instance_name = 2;
    // 实例规格
    string instance_type = 3;
    // 实例的计费方式
    string instance_charge_type = 4;
    // vCPU数
    int64 cpu = 5;
    // 实例操作系统的英文名称
    string os_name = 6;
    // 实例状态
    string status = 7;
    // 实例创建时间，UTC+0时间
    string created_time = 8;
    // 内存大小，单位为MiB
    int64 memory = 9;
    // 实例GPU信息
    message GpuInfo {
      float gpu_count = 1;
      repeated string gpu_id = 2;
      string gpu_type = 3;
    }
    GpuInfo gpu_info = 10;
    // 过期时间
    string expired_time = 11;
    // 系统盘信息
    message SystemDisk {
      // 系统盘类型
      string disk_type =1;
      // 系统盘ID
      string disk_id = 2;
      // 系统盘大小，单位：GB
      int64 disk_size = 3;
      // 所属的独享集群ID
      string cd_cid = 4;
    }
    SystemDisk system_disk = 12;
    // 数据盘信息
    message DataDisk {
      // 	数据盘大小，单位：GB
      int64 disk_size = 1;
      // 数据盘类型
      string disk_type = 2;
      // 数据盘ID
      string disk_id = 3;
      // 所属的独享集群ID
      string cd_cid = 4;
    }
    repeated DataDisk data_disks = 13;
    // 实例主网卡的内网IP列表
    repeated string private_ip_addresses = 14;
    // 实例主网卡的公网IP列表
    repeated string public_ip_addresses = 15;
    // 实例带宽信息
    message InternetAccessible {
      // 网络计费类型
      string internet_charge_type = 1;
      // 公网出带宽上限
      int64 internet_max_bandwidth_out = 2;
      // 是否分配公网IP
      bool public_ip_assigned = 3;
      // 带宽包ID
      string bandwidth_package_id = 4;
    }
    InternetAccessible internetAccessible = 16;
    // 实例所属虚拟私有网络信息
    message VirtualPrivateCloud {
      // 私有网络ID
      string vpc_id = 1;
      // 私有网络子网ID
      string subnet_id = 2;
      // 是否用作公网网关
      bool as_vpc_gateway = 3;
      // 私有网络子网 IP 数组
      repeated string private_ip_addresses = 4;
      // 为弹性网卡指定随机生成的 IPv6 地址数量
      uint64 ipv6_address_count = 5;
    }
    VirtualPrivateCloud virtualPrivateCloud = 17;
    // 实例运行的镜像ID
    string image_id = 18;
  }
  // 实例信息
  repeated Instance instances = 3;
}

message ListRegionRequest {
  string secret_id = 1;
  string secret_key = 2;
}

message ListRegionResponse {
  message Region {
    string region = 1;
    string region_name = 2;
    string region_state = 3;
  }
  repeated Region regions = 1;
}

message ListImageRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  // 实例状态列表的页码，起始值1，默认值1
  int64 page_number = 4;
  // 分页查询时设置的每页行数
  int64 page_size = 5;
}

message ListImageResponse {
  message Image {
    string image_id = 1;
    string image_name = 2;
    string image_description = 3;
    string os_name = 4;
    string architecture = 5;
    string platform = 6;
  }
  repeated Image images = 1;
  int64 total_count = 2;
  string request_id = 3;
}

message ListInstanceTypeRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
}

message ListInstanceTypeResponse {
  message InstanceType {
    string instance_type_id = 1;
    string instance_type_family = 2;
    int64 memory_size = 3;
    int64 cpu_core_count = 4;
    int64 gpu_sec = 5;
  }
  repeated InstanceType instance_types = 1;
}

message StartInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  repeated string instance_ids = 4;
  // 是否只预检此次请求。
  // true：发送检查请求，不会创建实例。检查项包括是否填写了必需参数，请求格式，业务限制和云服务器库存。
  // 如果检查不通过，则返回对应错误码；
  // 如果检查通过，则返回RequestId.
  // false（默认）：发送正常请求，通过检查后直接创建实例
  bool dry_run = 5;
}

message StartInstancesResponse {
  // 请求ID
  string request_id = 1;
}

message StopInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  repeated string instance_ids = 4;
  // 是否只预检此次请求。
  // true：发送检查请求，不会创建实例。检查项包括是否填写了必需参数，请求格式，业务限制和云服务器库存。
  // 如果检查不通过，则返回对应错误码；
  // 如果检查通过，则返回RequestId.
  // false（默认）：发送正常请求，通过检查后直接创建实例
  bool dry_run = 5;
}

message StopInstancesResponse {
  string request_id = 1;
}

message RebootInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  repeated string instance_ids = 4;
  // 是否只预检此次请求。
  // true：发送检查请求，不会创建实例。检查项包括是否填写了必需参数，请求格式，业务限制和云服务器库存。
  // 如果检查不通过，则返回对应错误码；
  // 如果检查通过，则返回RequestId.
  // false（默认）：发送正常请求，通过检查后直接创建实例
  bool dry_run = 5;
}

message RebootInstancesResponse {
  string request_id = 1;
}

message DeleteInstancesRequest {
  string secret_id = 1;
  string secret_key = 2;
  string region = 3;
  repeated string instance_ids = 4;
  // 是否只预检此次请求。
  // true：发送检查请求，不会创建实例。检查项包括是否填写了必需参数，请求格式，业务限制和云服务器库存。
  // 如果检查不通过，则返回对应错误码；
  // 如果检查通过，则返回RequestId.
  // false（默认）：发送正常请求，通过检查后直接创建实例
  bool dry_run = 5;
}

message DeleteInstancesResponse {
  string request_id = 1;
}