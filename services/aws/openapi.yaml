# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Instance API
    version: 0.0.1
paths:
    /api/images:
        get:
            tags:
                - Instance
            description: Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the images available to you.
            operationId: Instance_ListImages
            parameters:
                - name: accessKeyId
                  in: query
                  schema:
                    type: string
                - name: secretKey
                  in: query
                  schema:
                    type: string
                - name: region
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListImagesResponse'
    /api/instance-types:
        get:
            tags:
                - Instance
            description: 选择实例规格
            operationId: Instance_ListInstanceTypes
            parameters:
                - name: accessKeyId
                  in: query
                  schema:
                    type: string
                - name: secretKey
                  in: query
                  schema:
                    type: string
                - name: region
                  in: query
                  schema:
                    type: string
                - name: maxResults
                  in: query
                  description: 'The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value. Valid Range: Minimum value of 5. Maximum value of 100.'
                  schema:
                    type: integer
                    format: int32
                - name: nextToken
                  in: query
                  description: The token to retrieve the next page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstanceTypesResponse'
    /api/instances:
        get:
            tags:
                - Instance
            description: 实例列表
            operationId: Instance_ListInstances
            parameters:
                - name: accessKeyId
                  in: query
                  description: AWS Access key ID
                  schema:
                    type: string
                - name: secretKey
                  in: query
                  description: AWS Secret Access Key
                  schema:
                    type: string
                - name: region
                  in: query
                  description: Region is the region to send requests to.
                  schema:
                    type: string
                - name: maxResults
                  in: query
                  description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
                  schema:
                    type: integer
                    format: int32
                - name: nextToken
                  in: query
                  description: The token to request the next page of results.
                  schema:
                    type: string
                - name: dryRun
                  in: query
                  description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstancesResponse'
        post:
            tags:
                - Instance
            description: 创建实例
            operationId: Instance_CreateInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateInstancesResponse'
    /api/instances/reboot:
        put:
            tags:
                - Instance
            description: 重启
            operationId: Instance_RebootInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RebootInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RebootInstancesResponse'
    /api/instances/start:
        put:
            tags:
                - Instance
            description: 开机
            operationId: Instance_StartInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartInstancesResponse'
    /api/instances/stop:
        put:
            tags:
                - Instance
            description: 关机
            operationId: Instance_StopInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StopInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StopInstancesResponse'
    /api/instances/terminate:
        put:
            tags:
                - Instance
            description: 删除实例
            operationId: Instance_DeleteInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteInstancesResponse'
    /api/regions:
        get:
            tags:
                - Instance
            description: Describes the Regions that are enabled for your account, or all Regions.
            operationId: Instance_ListRegions
            parameters:
                - name: accessKeyId
                  in: query
                  schema:
                    type: string
                - name: secretKey
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRegionsResponse'
components:
    schemas:
        Any:
            type: object
            properties:
                typeUrl:
                    type: string
                    description: 'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL''s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'
                value:
                    type: string
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: bytes
            description: '`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     } Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ... Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use ''type.googleapis.com/full.type.name'' as the type URL and the unpack methods only use the fully qualified type name after the last ''/'' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'
        BlockDeviceMapping_EbsBlockDevice:
            type: object
            properties:
                deleteOnTermination:
                    type: boolean
                    description: Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS volumes on instance termination (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the Amazon EC2 User Guide.
                encrypted:
                    type: boolean
                    description: Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS encryption (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters) in the Amazon EC2 User Guide. In no case can you remove encryption from an encrypted volume. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances). This parameter is not returned by DescribeImageAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImageAttribute.html).
                iops:
                    type: integer
                    description: 'The number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. The following are the supported values for each volume type: * gp3: 3,000-16,000 IOPS * io1: 100-64,000 IOPS * io2: 100-64,000 IOPS For io1 and io2 volumes, we guarantee 64,000 IOPS only for Instances built on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). Other instance families guarantee performance up to 32,000 IOPS. This parameter is required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS. This parameter is not supported for gp2, st1, sc1, or standard volumes.'
                    format: int32
                kmsKeyId:
                    type: string
                    description: Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted. This parameter is only supported on BlockDeviceMapping objects called by RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html), RequestSpotFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html), and RequestSpotInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html).
                outpostArn:
                    type: string
                    description: The ARN of the Outpost on which the snapshot is stored. This parameter is only supported on BlockDeviceMapping objects called by  CreateImage (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html).
                snapshotId:
                    type: string
                    description: The ID of the snapshot.
                throughput:
                    type: integer
                    description: 'The throughput that the volume supports, in MiB/s. This parameter is valid only for gp3 volumes. Valid Range: Minimum value of 125. Maximum value of 1000.'
                    format: int32
                volumeSize:
                    type: integer
                    description: 'The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. The following are the supported volumes sizes for each volume type: * gp2 and gp3:1-16,384 * io1 and io2: 4-16,384 * st1 and sc1: 125-16,384 * standard: 1-1,024'
                    format: int32
                volumeType:
                    type: string
                    description: The volume type. For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon EC2 User Guide. If the volume type is io1 or io2, you must specify the IOPS that the volume supports.
            description: Describes a block device for an EBS volume.
        CreateInstancesRequest:
            type: object
            properties:
                accessKeyId:
                    type: string
                    description: AWS Access key ID
                secretKey:
                    type: string
                    description: AWS Secret Access Key
                region:
                    type: string
                    description: Region is the region to send requests to.
                imageId:
                    type: string
                    description: The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
                instanceType:
                    type: string
                    description: 'The instance type. For more information, see Instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon EC2 User Guide. Default: m1.small'
                blockDeviceMapping:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateInstancesRequest_BlockDeviceMapping'
                maxCount:
                    type: integer
                    description: 'The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount. Constraints: Between 1 and the maximum number you''re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 (http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 FAQ. This member is required.'
                    format: int32
                minCount:
                    type: integer
                    description: 'The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances. Constraints: Between 1 and the maximum number you''re allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 (http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 General FAQ. This member is required.'
                    format: int32
                dryRun:
                    type: boolean
                    description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
        CreateInstancesRequest_BlockDeviceMapping:
            type: object
            properties:
                deviceName:
                    type: string
                    description: The device name (for example, /dev/sdh or xvdh).
                ebs:
                    $ref: '#/components/schemas/BlockDeviceMapping_EbsBlockDevice'
                noDevice:
                    type: string
                    description: To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.
                virtualName:
                    type: string
                    description: 'The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume. NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect. Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.'
            description: Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
        CreateInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        DeleteInstancesRequest:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretKey:
                    type: string
                region:
                    type: string
                instanceIds:
                    type: array
                    items:
                        type: string
        DeleteInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListImagesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListInstanceTypesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListRegionsResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        RebootInstancesRequest:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretKey:
                    type: string
                region:
                    type: string
                instanceIds:
                    type: array
                    items:
                        type: string
        RebootInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        StartInstancesRequest:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretKey:
                    type: string
                region:
                    type: string
                instanceIds:
                    type: array
                    items:
                        type: string
        StartInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        StopInstancesRequest:
            type: object
            properties:
                accessKeyId:
                    type: string
                secretKey:
                    type: string
                region:
                    type: string
                instanceIds:
                    type: array
                    items:
                        type: string
        StopInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
tags:
    - name: Instance
