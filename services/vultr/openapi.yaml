# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Instance API
    version: 0.0.1
paths:
    /api/images:
        get:
            tags:
                - Instance
            description: List the OS images available for installation at Vultr.
            operationId: Instance_ListImages
            parameters:
                - name: accessToken
                  in: query
                  schema:
                    type: string
                - name: perPage
                  in: query
                  description: Number of items requested per page. Default is 100 and Max is 500.
                  schema:
                    type: integer
                    format: int32
                - name: cursor
                  in: query
                  description: Cursor for paging.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListImagesResponse'
    /api/instance:
        post:
            tags:
                - Instance
            description: 创建实例
            operationId: Instance_CreateInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateInstanceResponse'
    /api/instance/reboot:
        put:
            tags:
                - Instance
            description: 重启
            operationId: Instance_RebootInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RebootInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RebootInstanceResponse'
    /api/instance/start:
        put:
            tags:
                - Instance
            description: 开机
            operationId: Instance_StartInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartInstanceResponse'
    /api/instance/stop:
        put:
            tags:
                - Instance
            description: 关机
            operationId: Instance_StopInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StopInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StopInstanceResponse'
    /api/instance/terminate:
        put:
            tags:
                - Instance
            description: 删除实例
            operationId: Instance_DeleteInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteInstanceResponse'
    /api/instances:
        get:
            tags:
                - Instance
            description: 实例列表
            operationId: Instance_ListInstances
            parameters:
                - name: accessToken
                  in: query
                  schema:
                    type: string
                - name: perPage
                  in: query
                  description: Number of items requested per page. Default is 100 and Max is 500.
                  schema:
                    type: integer
                    format: int32
                - name: cursor
                  in: query
                  description: Cursor for paging.
                  schema:
                    type: string
                - name: tag
                  in: query
                  description: Filter by specific tag.
                  schema:
                    type: string
                - name: label
                  in: query
                  description: Filter by label.
                  schema:
                    type: string
                - name: mainIp
                  in: query
                  description: Filter by main ip address.
                  schema:
                    type: string
                - name: region
                  in: query
                  description: Filter by Region id.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstancesResponse'
    /api/plans:
        get:
            tags:
                - Instance
            description: Get a list of all VPS plans at Vultr.
            operationId: Instance_ListPlans
            parameters:
                - name: accessToken
                  in: query
                  schema:
                    type: string
                - name: perPage
                  in: query
                  description: Number of items requested per page. Default is 100 and Max is 500.
                  schema:
                    type: integer
                    format: int32
                - name: cursor
                  in: query
                  description: Cursor for paging.
                  schema:
                    type: string
                - name: planType
                  in: query
                  description: "Filter the results by type.  Type\t\tDescription  all\t\t\tAll available types\tvc2\t\t\tCloud Compute\tvdc\t\t\tDedicated Cloud\tvhf\t\t\tHigh Frequency Compute\tvhp\t\t\tHigh Performance\tvoc\t\t\tAll Optimized Cloud types\tvoc-g\t\tGeneral Purpose Optimized Cloud\tvoc-c\t\tCPU Optimized Cloud\tvoc-m\t\tMemory Optimized Cloud\tvoc-s\t\tStorage Optimized Cloud"
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPlansResponse'
    /api/regions:
        get:
            tags:
                - Instance
            description: List all Regions at Vultr.
            operationId: Instance_ListRegions
            parameters:
                - name: accessToken
                  in: query
                  schema:
                    type: string
                - name: perPage
                  in: query
                  description: Number of items requested per page. Default is 100 and Max is 500.
                  schema:
                    type: integer
                    format: int32
                - name: cursor
                  in: query
                  description: Cursor for paging.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRegionsResponse'
components:
    schemas:
        Any:
            type: object
            properties:
                typeUrl:
                    type: string
                    description: 'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL''s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'
                value:
                    type: string
                    description: Must be a valid serialized protocol buffer of the above specified type.
                    format: bytes
            description: '`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     } Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ... Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use ''type.googleapis.com/full.type.name'' as the type URL and the unpack methods only use the fully qualified type name after the last ''/'' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'
        CreateInstanceRequest:
            type: object
            properties:
                accessToken:
                    type: string
                region:
                    type: string
                    description: The Region id where the Instance is located.
                plan:
                    type: string
                    description: The Plan id to use when deploying this instance.
                imageId:
                    type: string
                    description: The Operating System id to use when deploying this instance.
                hostname:
                    type: string
                    description: The hostname to use when deploying this instance.
        CreateInstanceResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        DeleteInstanceRequest:
            type: object
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                    description: The Instance ID.
        DeleteInstanceResponse:
            type: object
            properties: {}
        ListImagesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListInstancesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListPlansResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        ListRegionsResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/Any'
        RebootInstanceRequest:
            type: object
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                    description: The Instance ID.
        RebootInstanceResponse:
            type: object
            properties: {}
        StartInstanceRequest:
            type: object
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                    description: The Instance ID.
        StartInstanceResponse:
            type: object
            properties: {}
        StopInstanceRequest:
            type: object
            properties:
                accessToken:
                    type: string
                instanceId:
                    type: string
                    description: The Instance ID.
        StopInstanceResponse:
            type: object
            properties: {}
tags:
    - name: Instance
